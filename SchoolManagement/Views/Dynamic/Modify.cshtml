@using Utilities
@model dynamic
@{
    ViewData["Title"] = Equals(ViewContext.RouteData.Values["action"], "Create")
        ? $"{Helper.FormatButton.Create.Title}"
        : $"{Helper.FormatButton.Edit.Title}";
    var iconAction = Equals(ViewContext.RouteData.Values["action"], "Create")
        ? $"{Helper.FormatButton.Create.Icon}"
        : $"{Helper.FormatButton.Edit.Icon}";
    
    var urlAction = $"~/Areas/{ViewContext.RouteData.Values["area"]}/" +
                    $"Views/{ViewContext.RouteData.Values["controller"]}/" +
                    $"{ViewContext.RouteData.Values["action"]}.cshtml";
}

<hr/>
<div class="row">
    <div class="col-md-4">
        <form method="post"
              asp-area="@ViewContext.RouteData.Values["area"]"
              asp-controller="@ViewContext.RouteData.Values["controller"]"
              asp-action="@ViewContext.RouteData.Values["action"]">

            @await Html.PartialAsync(urlAction)

            <hr/>

            <div class="form-group">
                <button type="submit" class="btn btn-primary">
                    <i class="@iconAction"></i> @ViewData["Title"]
                </button>

                <a type="button" class="btn btn-secondary"
                   asp-area="@ViewContext.RouteData.Values["area"]"
                   asp-controller="@ViewContext.RouteData.Values["controller"]"
                   asp-action="Index">
                    <i class="@Helper.FormatButton.Cancel.Icon"></i> @Helper.FormatButton.Cancel.Title
                </a>
            </div>
        </form>
    </div>
</div>